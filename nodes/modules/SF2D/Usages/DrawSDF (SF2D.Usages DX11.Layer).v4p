<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv50beta36.dtd" >
   <PATCH nodename="C:\Users\happy\Desktop\Dropbox\02_Tools\VVVV\vvvversions\vvvv_50beta36_x64\packs\FieldTrip\nodes\modules\SF2D\Usages\DrawSDF (SF2D.Usages DX11.Layer).v4p" systemname="DrawSDF (SF2D.Usages DX11.Layer)" filename="C:\Users\Kyle\Desktop\Dropbox\VVVV Files\vvvv_50beta35.7_x64\packs\FieldTrip\nodes\modules\Implementations\Render\DrawSDF (DX11.Layer SF2D)\DrawSDF (SF2D.Usages DX11.Layer).v4p" scrollx="120" scrolly="210">
   <BOUNDS type="Window" left="18510" top="7740" width="9000" height="6000">
   </BOUNDS>
   <PACK Name="vvvv-Message" Version="2.9.0">
   </PACK>
   <PACK Name="vvvv-ZeroMQ" Version="0.5.3">
   </PACK>
   <PACK Name="VVVV.Packs" Version="0.2.0">
   </PACK>
   <PACK Name="addonpack" Version="36.0.0">
   </PACK>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="1" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="2055" top="5655" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="2055" top="5655" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="Layer">
   </PIN>
   <PIN pinname="Input Node" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Semantics (DX11.Layer)" filename="%VVVV%\packs\dx11\nodes\plugins\base\VVVV.DX11.Nodes.dll" nodename="Semantics (DX11.Layer)" componentmode="Hidden" id="2">
   <BOUNDS type="Node" left="2055" top="4965" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Layer In" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Layer Out" visible="1">
   </PIN>
   <PIN pinname="Custom Semantics" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Resource Semantics" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Enabled" slicecount="1" values="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="2" srcpinname="Layer Out" dstnodeid="1" dstpinname="Input Node">
   </LINK>
   <NODE systemname="Quad (DX11.Geometry)" filename="%VVVV%\packs\dx11\nodes\plugins\base\VVVV.DX11.Nodes.dll" nodename="Quad (DX11.Geometry)" componentmode="Hidden" id="3">
   <BOUNDS type="Node" left="1725" top="3030" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Geometry Out" visible="1">
   </PIN>
   <PIN pinname="SizeXY" slicecount="2" values="2,2">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="5" systemname="IOBox (String)">
   <BOUNDS type="Box" left="495" top="1380" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="495" top="1380" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="MultiLine">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|SF2D Function|">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   <PIN pinname="Input String" visible="1" slicecount="1" values="||">
   </PIN>
   </NODE>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="6">
   <BOUNDS type="Node" left="2625" top="3000" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Intersperse" slicecount="1" values="CarriageReturnLineFeed">
   </PIN>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="5" srcpinname="Output String" dstnodeid="6" dstpinname="Input 1">
   </LINK>
   <NODE systemname="ShaderWatcher (DX11 Shader)" filename="%VVVV%\packs\Happy.fxh\nodes\modules\ShaderWatcher (DX11 Shader).v4p" nodename="ShaderWatcher (DX11 Shader)" componentmode="Hidden" id="9">
   <BOUNDS type="Node" left="3180" top="1830" width="100" height="100">
   </BOUNDS>
   <PIN pinname="File Path" visible="1" slicecount="1" values="..\Helpers\sdfTemplate.fx">
   </PIN>
   <PIN pinname="Shader Content" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Enumerations)" componentmode="InABox" id="10" systemname="IOBox (Enumerations)">
   <BOUNDS type="Box" left="8640" top="945" width="1590" height="270">
   </BOUNDS>
   <BOUNDS type="Node" left="8640" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Enum" slicecount="1" visible="1" values="DrawSDF">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Technique">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="15" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="10365" top="945" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="10365" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Enabled">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="16" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="2460" top="3705" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="2460" top="3705" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Render State|">
   </PIN>
   <PIN pinname="Pin Visibility" slicecount="1" values="True">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="17" systemname="IOBox (String)">
   <BOUNDS type="Box" left="9105" top="1485" width="675" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="9105" top="1485" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input String" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Defines">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="21" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="5730" top="5715" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="5730" top="5715" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Compiled">
   </PIN>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   </NODE>
   <NODE id="25" nodename="IOBox (Node)" componentmode="InABox" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="705" top="1935" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="705" top="1935" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Function Parameter Semantics|">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <NODE id="24" nodename="IOBox (Node)" componentmode="InABox" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="1005" top="2430" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="1005" top="2430" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Function Resource Semantics|">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="25" srcpinname="Output Node" dstnodeid="2" dstpinname="Custom Semantics">
   </LINK>
   <LINK srcnodeid="24" srcpinname="Output Node" dstnodeid="2" dstpinname="Resource Semantics">
   </LINK>
   <NODE systemname="DrawSDF_SF2D (DX11.Effect)" filename="%VVVV%\packs\FieldTrip\nodes\modules\Implementations\Render\DrawSDF (DX11.Layer SF2D)\DrawSDF_SF2D.fx" nodename="DrawSDF_SF2D (DX11.Effect)" componentmode="Hidden" id="0">
   <BOUNDS type="Node" left="2280" top="1335" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Layer" visible="1">
   </PIN>
   <PIN pinname="Geometry" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Shader Path" visible="1" pintype="Output">
   </PIN>
   <PIN pinname="Technique" slicecount="1" values="DrawSDF">
   </PIN>
   </NODE>
   <LINK srcnodeid="0" srcpinname="Shader Path" dstnodeid="9" dstpinname="File Path">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="26" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="4110" top="375" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="4110" top="375" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="0.011">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="softness">
   </PIN>
   </NODE>
   <NODE systemname="Decompose (Transform Vector)" filename="%VVVV%\lib\nodes\plugins\VVVV.Nodes.dll" nodename="Decompose (Transform Vector)" componentmode="Hidden" id="35">
   <BOUNDS type="Node" left="5280" top="720" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Transform In" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="ScaleXYZ" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="xy (2d)" nodename="xy (2d)" componentmode="Hidden" id="36">
   <BOUNDS type="Node" left="5535" top="1080" width="100" height="100">
   </BOUNDS>
   <PIN pinname="XYZ" visible="1">
   </PIN>
   <PIN pinname="XY" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="35" srcpinname="ScaleXYZ" dstnodeid="36" dstpinname="XYZ">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="37" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="5535" top="1455" width="795" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="5535" top="1455" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Vector Size" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="2">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="XY">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="36" srcpinname="XY" dstnodeid="37" dstpinname="Y Input Value">
   </LINK>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="38" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="5265" top="390" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="5265" top="390" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Aspect Ratio|">
   </PIN>
   </NODE>
   <LINK srcnodeid="38" srcpinname="Output Node" dstnodeid="35" dstpinname="Transform In">
   </LINK>
   <NODE systemname="RGB (Color Split Vector)" filename="%VVVV%\addonpack\lib\nodes\plugins\VVVV.Nodes.RGBVector.dll" nodename="RGB (Color Split Vector)" componentmode="Hidden" id="42">
   <BOUNDS type="Node" left="8190" top="3945" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1">
   </PIN>
   <PIN pinname=" RGBA" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Color)" componentmode="InABox" id="43" systemname="IOBox (Color)">
   <BOUNDS type="Box" left="8910" top="2895" width="2250" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="8910" top="2895" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Color Input" slicecount="1" visible="1" values="|1.00000,1.00000,1.00000,1.00000|">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Color">
   </PIN>
   </NODE>
   <LINK srcnodeid="43" srcpinname="Color Output" dstnodeid="42" dstpinname="Input">
   </LINK>
   <NODE systemname="IOBox (Node)" nodename="IOBox (Node)" componentmode="InABox" id="45">
   <BOUNDS type="Node" left="1185" top="435" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="1185" top="435" width="795" height="240">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="Input">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <PACK Name="dx11" Version="1.0.5">
   </PACK>
   <NODE systemname="Split (SF2D)" filename="%VVVV%\packs\FieldTrip\nodes\plugins\FieldTripHelpers.dll" nodename="Split (SF2D)" componentmode="Hidden" id="44">
   <BOUNDS type="Node" left="1200" top="810" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="1200" top="810" width="3000" height="3000">
   </BOUNDS>
   <PIN pinname="Input" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="HLSL" visible="1">
   </PIN>
   <PIN pinname="Resource Semantics" visible="1">
   </PIN>
   <PIN pinname="Custom Semantics" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="45" srcpinname="Output Node" dstnodeid="44" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="44" srcpinname="HLSL" dstnodeid="5" dstpinname="Input String">
   </LINK>
   <LINK srcnodeid="44" srcpinname="Custom Semantics" dstnodeid="25" dstpinname="Input Node">
   </LINK>
   <LINK srcnodeid="44" srcpinname="Resource Semantics" dstnodeid="24" dstpinname="Input Node">
   </LINK>
   <NODE systemname="Self (VVVV)" nodename="Self (VVVV)" componentmode="Hidden" id="46">
   <BOUNDS type="Node" left="3660" top="2310" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Instance index" visible="1">
   </PIN>
   <PIN pinname="Query Save" slicecount="1" values="0">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="47" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="4140" top="2790" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="4140" top="2790" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="46" srcpinname="Instance index" dstnodeid="47" dstpinname="Y Input Value">
   </LINK>
   <NODE systemname="AsString (Value)" nodename="AsString (Value)" componentmode="Hidden" id="48">
   <BOUNDS type="Node" left="4335" top="3060" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="47" srcpinname="Y Output Value" dstnodeid="48" dstpinname="Input">
   </LINK>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="49">
   <BOUNDS type="Node" left="4065" top="3390" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 1" slicecount="1" values="//">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="48" srcpinname="Output" dstnodeid="49" dstpinname="Input 2">
   </LINK>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="50">
   <BOUNDS type="Node" left="4065" top="3705" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Intersperse" slicecount="1" values="CarriageReturnLineFeed">
   </PIN>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="49" srcpinname="Output" dstnodeid="50" dstpinname="Input 1">
   </LINK>
   <LINK srcnodeid="9" srcpinname="Shader Content" dstnodeid="50" dstpinname="Input 2">
   </LINK>
   <LINK srcnodeid="50" srcpinname="Output" dstnodeid="6" dstpinname="Input 2">
   </LINK>
   <NODE id="7" systemname="Shader (DX11.Effect Fieldtrip String)" filename="%VVVV%\packs\FieldTrip\nodes\plugins\FieldTripHelpers.dll" nodename="Shader (DX11.Effect Fieldtrip String)" componentmode="Hidden">
   <BOUNDS type="Node" left="2040" top="4245" width="5040" height="270">
   </BOUNDS>
   <PIN pinname="ShaderCode" visible="1">
   </PIN>
   <PIN pinname="ConfigShader" slicecount="1" values="|////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;2D Noise Basis Functions&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fNoiseS2D_0_&quot;&cr;&lf;&cr;&lf;// ensures the function is defined only once per instance&cr;&lf;#ifndef fNoiseS2D_0_BODY &cr;&lf;#define fNoiseS2D_0_BODY&cr;&lf;&cr;&lf;#ifndef NOISE_FXH&cr;&lf;#include &lt;packs\happy.fxh\noise.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef MAP_FXH&cr;&lf;#include &lt;packs\happy.fxh\map.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#define fNoiseS2D_0_NOISEBASIS perlin&cr;&lf;#define fNoiseS2D_0_INFLECTION 2&cr;&lf;#define fNoiseS2D_0_USETIME 1 // preprocessor options from patch inserted here&cr;&lf;#ifndef fNoiseS2D_0_NOISEBASIS&cr;&lf;#define fNoiseS2D_0_NOISEBASIS perlin&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS2D_0_WORLEYOPTIONS&cr;&lf;#define fNoiseS2D_0_WORLEYOPTIONS&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS2D_0_INFLECTION&cr;&lf;#define fNoiseS2D_0_INFLECTION 0&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS2D_0_USETIME&cr;&lf;#define fNoiseS2D_0_USETIME 0&cr;&lf;#endif&cr;&lf;&cr;&lf;// Paramaters&cr;&lf;float fNoiseS2D_0_freq : fNoiseS2D_0_FREQ = 2; &cr;&lf;float fNoiseS2D_0_amp : fNoiseS2D_0_AMP = .1; &cr;&lf;float fNoiseS2D_0_center : fNoiseS2D_0_CENTER; &cr;&lf;float fNoiseS2D_0_bias : fNoiseS2D_0_BIAS = 0.5;&cr;&lf;float fNoiseS2D_0_time : fNoiseS2D_0_TIME; &cr;&lf;float2 fNoiseS2D_0_domainOffset : fNoiseS2D_0_DOMAINOFFSET;&cr;&lf;&tab;&cr;&lf;&cr;&lf;&cr;&lf;float fNoiseS2D_0_ (float2 p)&cr;&lf;{&cr;&lf;&tab;p = p * fNoiseS2D_0_freq + fNoiseS2D_0_domainOffset;&cr;&lf;&tab;&cr;&lf;&tab;#if fNoiseS2D_0_USETIME == 1&cr;&lf;&tab;float3 pt = float3(p, fNoiseS2D_0_time);&cr;&lf;&tab;float noise = fNoiseS2D_0_NOISEBASIS(pt fNoiseS2D_0_WORLEYOPTIONS);&cr;&lf;&tab;#else&cr;&lf;&tab;float noise = fNoiseS2D_0_NOISEBASIS(p fNoiseS2D_0_WORLEYOPTIONS);&cr;&lf;&tab;#endif&cr;&lf;&tab;&cr;&lf;&tab;noise = sign(noise) * bias(abs(noise), fNoiseS2D_0_bias);&cr;&lf;&tab;#if fNoiseS2D_0_INFLECTION == 1&cr;&lf;&tab;// Billow&cr;&lf;&tab;noise = abs(noise);&cr;&lf;&tab;#elif fNoiseS2D_0_INFLECTION == 2&cr;&lf;&tab;//Ridge&cr;&lf;&tab;noise = 1 - abs(noise);&cr;&lf;&tab;#endif&cr;&lf;&tab;return noise * fNoiseS2D_0_amp + fNoiseS2D_0_center;&cr;&lf;}&cr;&lf;// end of the function body&cr;&lf;#endif &cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;#ifndef fDomainDistortionS2D_0_INPUT&cr;&lf;#define fDomainDistortionS2D_0_INPUT fNoiseS2D_0_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;2D Vector Noise Basis Functions&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fNoiseV2D_0_&quot;&cr;&lf;&cr;&lf;// ensures the function is defined only once per instance&cr;&lf;#ifndef fNoiseV2D_0_BODY &cr;&lf;#define fNoiseV2D_0_BODY&cr;&lf;&cr;&lf;#ifndef NOISE_FXH&cr;&lf;#include &lt;packs\happy.fxh\noise.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef MAP_FXH&cr;&lf;#include &lt;packs\happy.fxh\map.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#define fNoiseV2D_0_NOISEBASIS perlin&cr;&lf;#define fNoiseV2D_0_INFLECTION 0&cr;&lf;#ifndef fNoiseV2D_0_NOISEBASIS&cr;&lf;#define fNoiseV2D_0_NOISEBASIS perlin&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseV2D_0_WORLEYOPTIONS&cr;&lf;#define fNoiseV2D_0_WORLEYOPTIONS&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseV2D_0_INFLECTION&cr;&lf;#define fNoiseV2D_0_INFLECTION 0&cr;&lf;#endif&cr;&lf;&cr;&lf;// parameters&cr;&lf;float2 fNoiseV2D_0_freq : fNoiseV2D_0_FREQ = 2; &cr;&lf;float2 fNoiseV2D_0_amp : fNoiseV2D_0_AMP = .1; &cr;&lf;float2 fNoiseV2D_0_center : fNoiseV2D_0_CENTER; &cr;&lf;float2 fNoiseV2D_0_bias : fNoiseV2D_0_BIAS = 0.5;&cr;&lf;float fNoiseV2D_0_time : fNoiseV2D_0_TIME; &cr;&lf;float2 fNoiseV2D_0_domainOffset : fNoiseV2D_0_DOMAINOFFSET;&cr;&lf;&tab;&cr;&lf;&cr;&lf;&cr;&lf;float2 fNoiseV2D_0_ (float2 p)&cr;&lf;{&cr;&lf;&tab;p = p * fNoiseV2D_0_freq + fNoiseV2D_0_domainOffset;&cr;&lf;&tab;float3 pt = float3(p, fNoiseV2D_0_time);&cr;&lf;&tab;float2 noise = float2(fNoiseV2D_0_NOISEBASIS(pt fNoiseV2D_0_WORLEYOPTIONS), fNoiseV2D_0_NOISEBASIS(pt + 173.1 fNoiseV2D_0_WORLEYOPTIONS));&cr;&lf;&tab;noise.x = sign(noise.x) * bias(abs(noise.x), fNoiseV2D_0_bias.x);&cr;&lf;&tab;noise.y = sign(noise.y) * bias(abs(noise.y), fNoiseV2D_0_bias.y);&cr;&lf;&tab;#if fNoiseV2D_0_INFLECTION == 1&cr;&lf;&tab;// Billow&cr;&lf;&tab;noise = abs(noise);&cr;&lf;&tab;#elif fNoiseV2D_0_INFLECTION == 2&cr;&lf;&tab;//Ridge&cr;&lf;&tab;noise = 1 - abs(noise);&cr;&lf;&tab;#endif&cr;&lf;&tab;return noise * fNoiseV2D_0_amp + fNoiseV2D_0_center;&cr;&lf;}&cr;&lf;// end of the function body&cr;&lf;#endif &cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;#ifndef fDomainDistortionS2D_0_DISTORTION&cr;&lf;#define fDomainDistortionS2D_0_DISTORTION fNoiseV2D_0_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;2D Scalar Domain Distortion Function&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fDomainDistortionS2D_0_&quot;&cr;&lf;&cr;&lf;// ensures the function is defined only once per instance&cr;&lf;#ifndef fDomainDistortionS2D_0_BODY &cr;&lf;#define fDomainDistortionS2D_0_BODY&cr;&lf;&cr;&lf;// Input function placeholder&cr;&lf;#ifndef fDomainDistortionS2D_0_INPUT&cr;&lf;#define fDomainDistortionS2D_0_INPUT length&cr;&lf;#endif&cr;&lf;&cr;&lf;// Distortion VF2D function placeholder&cr;&lf;#ifndef fDomainDistortionS2D_0_DISTORTION&cr;&lf;#define fDomainDistortionS2D_0_DISTORTION normalize&cr;&lf;#endif&cr;&lf;&cr;&lf;// Parameters&cr;&lf;float fDomainDistortionS2D_0_Strength : fDomainDistortionS2D_0_STRENGTH = 1.0;&cr;&lf;&cr;&lf;float fDomainDistortionS2D_0_ (float2 p)&cr;&lf;{&cr;&lf;&tab;p += fDomainDistortionS2D_0_DISTORTION(p) * fDomainDistortionS2D_0_Strength;&cr;&lf;&tab;return fDomainDistortionS2D_0_INPUT(p);&cr;&lf;}&cr;&lf;// end of the function body&cr;&lf;#endif &cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;#ifndef SF2D&cr;&lf;#define SF2D fDomainDistortionS2D_0_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;//0.0000&cr;&lf;&cr;&lf;#ifndef SDF_FXH&cr;&lf;#include &lt;packs\happy.fxh\sdf.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef SF2D&cr;&lf;#define SF2D length // Just a place holder&cr;&lf;#endif&cr;&lf;&cr;&lf;&cr;&lf;cbuffer cbControls:register(b0)&cr;&lf;{&cr;&lf;&tab;float4x4 tVP:VIEWPROJECTION;&cr;&lf;&tab;float4x4 tW;&cr;&lf;&tab;float4 drawCol  = { 1.0f,1.0f,1.0f,1.0f };&cr;&lf;&tab;float2 apsectRatio = 1;&cr;&lf;&tab;float softness;&cr;&lf;};&cr;&lf;&cr;&lf;struct VS_IN{float4 PosO:POSITION;float4 TexCd:TEXCOORD0;};&cr;&lf;struct VS_OUT{float4 PosWVP:SV_POSITION;float4 TexCd:TEXCOORD0;};&cr;&lf;VS_OUT VS(VS_IN In){VS_OUT Out=(VS_OUT)0;Out.TexCd=In.TexCd;Out.PosWVP=float4(In.PosO.xy,0,1);return Out;}&cr;&lf;&cr;&lf;float4 PS_SDF(VS_OUT In) : SV_TARGET&cr;&lf;{&cr;&lf;&tab;float2 p = In.TexCd.xy;&cr;&lf;&tab;p = p*2-1;&cr;&lf;&tab;p.y *=-1;&cr;&lf;&tab;p = mul(float4(p,0,1), tW).xy;&cr;&lf;&tab;p *= apsectRatio; &cr;&lf;&tab;float dist = SF2D(p);&cr;&lf;&tab;float4 c=1;&cr;&lf;&tab;c = draw2DSDF(dist, softness);&cr;&lf;&tab;return drawCol * draw2DSDF(dist, softness);&cr;&lf;}&cr;&lf;&cr;&lf;float4 PS_Dist(VS_OUT In) : SV_TARGET&cr;&lf;{&cr;&lf;&tab;float2 p = In.TexCd.xy;&cr;&lf;&tab;p = p*2-1;&cr;&lf;&tab;p.y *=-1;&cr;&lf;&tab;p = mul(float4(p,0,1), tW).xy;&cr;&lf;&tab;p *= apsectRatio; &cr;&lf;&tab;float dist = SF2D(p);&cr;&lf;&tab;return drawCol * dist;&cr;&lf;}&cr;&lf;&cr;&lf;technique11 DrawSDF&cr;&lf;{&cr;&lf;&tab;pass P0&cr;&lf;&tab;{&cr;&lf;&tab;&tab;SetVertexShader(CompileShader(vs_5_0,VS()));&cr;&lf;&tab;&tab;SetPixelShader(CompileShader(ps_5_0,PS_SDF()));&cr;&lf;&tab;}&cr;&lf;}&cr;&lf;&cr;&lf;technique11 RawDistance&cr;&lf;{&cr;&lf;&tab;pass P0&cr;&lf;&tab;{&cr;&lf;&tab;&tab;SetVertexShader(CompileShader(vs_5_0,VS()));&cr;&lf;&tab;&tab;SetPixelShader(CompileShader(ps_5_0,PS_Dist()));&cr;&lf;&tab;}&cr;&lf;}&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;|">
   </PIN>
   <PIN pinname="ConfigDefines" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Technique" slicecount="1" visible="1" values="RayMarchGradient">
   </PIN>
   <PIN pinname="Layer" visible="1">
   </PIN>
   <PIN pinname="Geometry" visible="1">
   </PIN>
   <PIN pinname="March Step Length" visible="1">
   </PIN>
   <PIN pinname="March Min Distance" visible="1">
   </PIN>
   <PIN pinname="March Max Distance" visible="1">
   </PIN>
   <PIN pinname="March Max Iterations" visible="1">
   </PIN>
   <PIN pinname="Enabled" visible="1">
   </PIN>
   <PIN pinname="Render State" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Defines" visible="1" pintype="Input" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Technique Valid" visible="1">
   </PIN>
   <PIN pinname="softness" slicecount="1" visible="1" values="0">
   </PIN>
   <PIN pinname="xAspect" visible="1">
   </PIN>
   <PIN pinname="apsectRatioXY" visible="1" slicecount="2" values="1,1">
   </PIN>
   <PIN pinname="Color" slicecount="1" values="|0.84152,0.84152,0.84152,1.00000|">
   </PIN>
   <PIN pinname="drawCol" slicecount="1" values="|0.70146,0.96664,0.85429,1.00000|">
   </PIN>
   <PIN pinname="drawColXYZW" slicecount="4" visible="1" values="1,1,1,1">
   </PIN>
   <PIN pinname="Compiled" visible="1">
   </PIN>
   <PIN pinname="Transform In" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="tW" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="42" srcpinname=" RGBA" dstnodeid="7" dstpinname="drawColXYZW">
   </LINK>
   <LINK srcnodeid="37" srcpinname="Y Output Value" dstnodeid="7" dstpinname="apsectRatioXY">
   </LINK>
   <LINK srcnodeid="26" srcpinname="Y Output Value" dstnodeid="7" dstpinname="softness">
   </LINK>
   <LINK srcnodeid="6" srcpinname="Output" dstnodeid="7" dstpinname="ShaderCode">
   </LINK>
   <LINK srcnodeid="17" srcpinname="Output String" dstnodeid="7" dstpinname="Defines">
   </LINK>
   <LINK srcnodeid="16" srcpinname="Output Node" dstnodeid="7" dstpinname="Render State">
   </LINK>
   <LINK srcnodeid="15" srcpinname="Y Output Value" dstnodeid="7" dstpinname="Enabled">
   </LINK>
   <LINK srcnodeid="10" srcpinname="Output Enum" dstnodeid="7" dstpinname="Technique">
   </LINK>
   <LINK srcnodeid="3" srcpinname="Geometry Out" dstnodeid="7" dstpinname="Geometry">
   </LINK>
   <LINK srcnodeid="7" srcpinname="Layer" dstnodeid="2" dstpinname="Layer In">
   </LINK>
   <LINK srcnodeid="7" srcpinname="Compiled" dstnodeid="21" dstpinname="Y Input Value">
   </LINK>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="51" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="2700" top="555" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="2700" top="555" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Transform">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Inverse (Transform)" nodename="Inverse (Transform)" componentmode="Hidden" id="52">
   <BOUNDS type="Node" left="3510" top="840" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Source" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Transform Out" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="51" srcpinname="Output Node" dstnodeid="52" dstpinname="Source">
   </LINK>
   <INFO author="" description="Simple drawing for 2D signed distance fields" tags="">
   </INFO>
   <LINK srcnodeid="52" srcpinname="Transform Out" dstnodeid="7" dstpinname="tW">
   </LINK>
   </PATCH>