<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv50beta38.1.dtd" >
   <PATCH nodename="D:\Dropbox\02_Tools\VVVV\vvvversions\vvvv_50beta38.1_x64\packs\FieldTrip\nodes\modules\SF3D\Usages\RaymarchMatCap (SF3D.Usages DX11.Layer).v4p" systemname="RaymarchMatCap (SF3D.Usages DX11.Layer)" filename="C:\Users\Kyle\Desktop\Dropbox\VVVV Files\vvvv_50beta35.7_x64\packs\FieldTrip\nodes\modules\Implementations\Render\RaymarchMatCap (DX11.Layer SF3D)\RaymarchMatCap (SF3D.Usages DX11.Layer).v4p" scrollx="0" scrolly="0">
   <BOUNDS type="Window" left="8235" top="3450" width="12855" height="8490">
   </BOUNDS>
   <PACK Name="vvvv-Message" Version="2.9.0">
   </PACK>
   <PACK Name="vvvv-ZeroMQ" Version="0.5.3">
   </PACK>
   <PACK Name="VVVV.Packs" Version="0.2.0">
   </PACK>
   <PACK Name="addonpack" Version="38.0.0">
   </PACK>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="1" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="2055" top="5655" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="2055" top="5655" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="Layer">
   </PIN>
   <PIN pinname="Input Node" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Semantics (DX11.Layer)" filename="%VVVV%\packs\dx11\nodes\plugins\base\VVVV.DX11.Nodes.dll" nodename="Semantics (DX11.Layer)" componentmode="Hidden" id="2">
   <BOUNDS type="Node" left="2055" top="4965" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Layer In" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Layer Out" visible="1">
   </PIN>
   <PIN pinname="Custom Semantics" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Resource Semantics" visible="1" slicecount="1" values="||">
   </PIN>
   </NODE>
   <LINK srcnodeid="2" srcpinname="Layer Out" dstnodeid="1" dstpinname="Input Node">
   </LINK>
   <NODE systemname="Quad (DX11.Geometry)" filename="%VVVV%\packs\dx11\nodes\plugins\base\VVVV.DX11.Nodes.dll" nodename="Quad (DX11.Geometry)" componentmode="Hidden" id="3">
   <BOUNDS type="Node" left="1725" top="3030" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Geometry Out" visible="1">
   </PIN>
   <PIN pinname="SizeXY" slicecount="2" values="2,2">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="5" systemname="IOBox (String)">
   <BOUNDS type="Box" left="390" top="1290" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="390" top="1290" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="MultiLine">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|SF3D Function|">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   <PIN pinname="Input String" visible="1" slicecount="1" values="||">
   </PIN>
   </NODE>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="6">
   <BOUNDS type="Node" left="2625" top="3000" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Intersperse" slicecount="1" values="CarriageReturnLineFeed">
   </PIN>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="5" srcpinname="Output String" dstnodeid="6" dstpinname="Input 1">
   </LINK>
   <NODE systemname="ShaderWatcher (DX11 Shader)" filename="%VVVV%\packs\Happy.fxh\nodes\modules\ShaderWatcher (DX11 Shader).v4p" nodename="ShaderWatcher (DX11 Shader)" componentmode="Hidden" id="9">
   <BOUNDS type="Node" left="3180" top="1830" width="100" height="100">
   </BOUNDS>
   <PIN pinname="File Path" visible="1" slicecount="1" values="..\Helpers\sdfTemplate.fx">
   </PIN>
   <PIN pinname="Shader Content" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="9" srcpinname="Shader Content" dstnodeid="6" dstpinname="Input 2">
   </LINK>
   <NODE nodename="IOBox (Enumerations)" componentmode="InABox" id="10" systemname="IOBox (Enumerations)">
   <BOUNDS type="Box" left="8640" top="945" width="1590" height="270">
   </BOUNDS>
   <BOUNDS type="Node" left="8640" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Enum" slicecount="1" visible="1" values="RayMarchMatCap">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Technique">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="11" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="3495" top="945" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="3495" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="0.64">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|March Step Length|">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="12" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="5040" top="945" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="5040" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="0.07">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|March Min Distance|">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="13" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="6195" top="945" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="6195" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="7.85">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|March Max Distance|">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="14" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="7215" top="945" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="7215" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="180">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|March Max Iterations|">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="15" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="10365" top="945" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="10365" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Enabled">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="16" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="2460" top="3705" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="2460" top="3705" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Render State|">
   </PIN>
   <PIN pinname="Pin Visibility" slicecount="1" values="Hidden">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="21" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="5610" top="6855" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="5610" top="6855" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Compiled">
   </PIN>
   <PIN pinname="Y Input Value" visible="1" slicecount="1" values="1">
   </PIN>
   </NODE>
   <NODE id="25" nodename="IOBox (Node)" componentmode="InABox" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="705" top="1935" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="705" top="1935" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Function Parameter Semantics|">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <NODE id="24" nodename="IOBox (Node)" componentmode="InABox" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="1005" top="2430" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="1005" top="2430" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Function Resource Semantics|">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="25" srcpinname="Output Node" dstnodeid="2" dstpinname="Custom Semantics">
   </LINK>
   <LINK srcnodeid="24" srcpinname="Output Node" dstnodeid="2" dstpinname="Resource Semantics">
   </LINK>
   <NODE systemname="Self (VVVV)" nodename="Self (VVVV)" componentmode="Hidden" id="26">
   <BOUNDS type="Node" left="7785" top="5205" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Query Save" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="27" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="7830" top="4590" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="7830" top="4590" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="0">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   </NODE>
   <LINK srcnodeid="27" srcpinname="Y Output Value" dstnodeid="26" dstpinname="Query Save">
   </LINK>
   <NODE systemname="RaymarchMatCap_SF3D (DX11.Effect)" filename="%VVVV%\packs\FieldTrip\nodes\modules\Implementations\Render\RaymarchMatCap (DX11.Layer SF3D)\RaymarchMatCap_SF3D.fx" nodename="RaymarchMatCap_SF3D (DX11.Effect)" componentmode="Hidden" id="0">
   <BOUNDS type="Node" left="2280" top="1335" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Layer" visible="1">
   </PIN>
   <PIN pinname="Geometry" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Shader Path" visible="1" pintype="Output">
   </PIN>
   </NODE>
   <LINK srcnodeid="0" srcpinname="Shader Path" dstnodeid="9" dstpinname="File Path">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="30" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="6210" top="2400" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="6210" top="2400" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="0.04">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|AO Scale|">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="31" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="6360" top="2790" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="6360" top="2790" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="0.5">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|AO Bias|">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="32" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="6480" top="3315" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="6480" top="3315" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|MatCap Texture|">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <PACK Name="dx11" Version="1.3.1.1">
   </PACK>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="35">
   <BOUNDS type="Node" left="9360" top="3030" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 1" slicecount="1" values="WRITEDEPTH=">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="AsString (Value)" nodename="AsString (Value)" componentmode="Hidden" id="34">
   <BOUNDS type="Node" left="9480" top="2520" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input" visible="1">
   </PIN>
   <PIN pinname="SubType" slicecount="1" values="|Integer (0 .. MaxInt)|">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="33" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="9480" top="1740" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="9480" top="1740" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Write Depth|">
   </PIN>
   <PIN pinname="X Input Value" slicecount="1" values="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="33" srcpinname="Y Output Value" dstnodeid="34" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="34" srcpinname="Output" dstnodeid="35" dstpinname="Input 2">
   </LINK>
   <NODE systemname="IOBox (Node)" nodename="IOBox (Node)" componentmode="InABox" id="37">
   <BOUNDS type="Node" left="1125" top="180" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="1125" top="180" width="795" height="240">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="Input">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Split (SF3D)" filename="%VVVV%\packs\FieldTrip\nodes\plugins\FieldTripHelpers.dll" nodename="Split (SF3D)" componentmode="Hidden" id="36">
   <BOUNDS type="Node" left="1140" top="555" width="100" height="100">
   </BOUNDS>
   <BOUNDS type="Box" left="1140" top="555" width="3000" height="3000">
   </BOUNDS>
   <PIN pinname="Input" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="HLSL" visible="1">
   </PIN>
   <PIN pinname="Resource Semantics" visible="1">
   </PIN>
   <PIN pinname="Custom Semantics" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="37" srcpinname="Output Node" dstnodeid="36" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="36" srcpinname="HLSL" dstnodeid="5" dstpinname="Input String">
   </LINK>
   <LINK srcnodeid="36" srcpinname="Custom Semantics" dstnodeid="25" dstpinname="Input Node">
   </LINK>
   <LINK srcnodeid="36" srcpinname="Resource Semantics" dstnodeid="24" dstpinname="Input Node">
   </LINK>
   <NODE systemname="Shader (DX11.Effect Fieldtrip String)" filename="%VVVV%\packs\FieldTrip\nodes\plugins\FieldTripHelpers.dll" nodename="Shader (DX11.Effect Fieldtrip String)" componentmode="Hidden" id="7">
   <BOUNDS type="Node" left="2040" top="4245" width="5040" height="270">
   </BOUNDS>
   <PIN pinname="ShaderCode" visible="1">
   </PIN>
   <PIN pinname="ConfigShader" slicecount="1" values="|&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;Simple Sphere Distance Class&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fSphere3DSDF_1_&quot;&cr;&lf;&cr;&lf;// ensures the function is defined only once per instance&cr;&lf;#ifndef fSphere3DSDF_1_BODY &cr;&lf;#define fSphere3DSDF_1_BODY&cr;&lf;&cr;&lf;#ifndef SDF_FXH&cr;&lf;#include &lt;packs\happy.fxh\sdf.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;// Parameters&cr;&lf;StructuredBuffer&lt;float3&gt; fSphere3DSDF_1_pos : fSphere3DSDF_1_POS;&cr;&lf;StructuredBuffer&lt;float&gt; fSphere3DSDF_1_radius : fSphere3DSDF_1_RADIUS;&cr;&lf;int fSphere3DSDF_1_count : fSphere3DSDF_1_COUNT = 1 ;&cr;&lf;&cr;&lf;float fSphere3DSDF_1_ (float3 p)&cr;&lf;{&cr;&lf;&tab;float d = 999999;&cr;&lf;&tab;for(int i = 0; i&lt; fSphere3DSDF_1_count; i++)&cr;&lf;&tab;{&cr;&lf;&tab;&tab;d = min (d, fSphere(p-fSphere3DSDF_1_pos[i], fSphere3DSDF_1_radius[i]));&lf;&tab;}&cr;&lf;&tab;return d;&cr;&lf;}&cr;&lf;// end of the function body&cr;&lf;#endif &cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;#ifndef fScalarOpS3D_5_INPUT1&cr;&lf;#define fScalarOpS3D_5_INPUT1 fSphere3DSDF_1_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;3D Noise Basis Functions&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fNoiseS3D_1_&quot;&cr;&lf;&cr;&lf;// ensures the function is defined only once per instance&cr;&lf;#ifndef fNoiseS3D_1_BODY &cr;&lf;#define fNoiseS3D_1_BODY&cr;&lf;&cr;&lf;#ifndef NOISE_FXH&cr;&lf;#include &lt;packs\happy.fxh\noise.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef MAP_FXH&cr;&lf;#include &lt;packs\happy.fxh\map.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#define fNoiseS3D_1_NOISEBASIS perlin&cr;&lf;#define fNoiseS3D_1_INFLECTION 0 // preprocessor options from patch inserted here&cr;&lf;#ifndef fNoiseS3D_1_NOISEBASIS&cr;&lf;#define fNoiseS3D_1_NOISEBASIS perlin&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_1_WORLEYOPTIONS&cr;&lf;#define fNoiseS3D_1_WORLEYOPTIONS&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_1_INFLECTION&cr;&lf;#define fNoiseS3D_1_INFLECTION 0&cr;&lf;#endif&cr;&lf;&cr;&lf;// paramaters&cr;&lf;float fNoiseS3D_1_freq : fNoiseS3D_1_FREQ = 2; &cr;&lf;float fNoiseS3D_1_amp : fNoiseS3D_1_AMP = .1; &cr;&lf;float fNoiseS3D_1_center : fNoiseS3D_1_CENTER; &cr;&lf;float fNoiseS3D_1_bias : fNoiseS3D_1_BIAS = 0.5;&cr;&lf;float3 fNoiseS3D_1_domainOffset : fNoiseS3D_1_DOMAINOFFSET;&cr;&lf;&tab;&cr;&lf;&cr;&lf;&cr;&lf;float fNoiseS3D_1_ (float3 p)&cr;&lf;{&cr;&lf;&tab;p = p * fNoiseS3D_1_freq + fNoiseS3D_1_domainOffset;&cr;&lf;&tab;float noise = fNoiseS3D_1_NOISEBASIS(p  fNoiseS3D_1_WORLEYOPTIONS);&cr;&lf;&tab;noise = sign(noise) * bias(abs(noise), fNoiseS3D_1_bias);&cr;&lf;&tab;#if fNoiseS3D_1_INFLECTION == 1&cr;&lf;&tab;// Billow&cr;&lf;&tab;noise = abs(noise);&cr;&lf;&tab;#elif fNoiseS3D_1_INFLECTION == 2&cr;&lf;&tab;//Ridge&cr;&lf;&tab;noise = 1 - abs(noise);&cr;&lf;&tab;#endif&cr;&lf;&tab;return noise * fNoiseS3D_1_amp + fNoiseS3D_1_center;&cr;&lf;}&cr;&lf;// end of the function body&cr;&lf;#endif &cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;#ifndef fScalarOpS3D_5_INPUT2&cr;&lf;#define fScalarOpS3D_5_INPUT2 fNoiseS3D_1_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;3D Scalar Field Basic Ops Functions + - * /&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fScalarOpS3D_5_&quot;&cr;&lf;&cr;&lf;// ensures the function is defined only once per instance&cr;&lf;#ifndef fScalarOpS3D_5_BODY &cr;&lf;#define fScalarOpS3D_5_BODY&cr;&lf;&cr;&lf;#define fScalarOpS3D_5_OP fScalarOpS3D_5_INPUT1(p) + fScalarOpS3D_5_INPUT2(p) // preprocessor options from patch inserted here&cr;&lf;#ifndef fScalarOpS3D_5_OP&cr;&lf;#define fScalarOpS3D_5_OP fScalarOpS3D_5_INPUT1(p) + fScalarOpS3D_5_INPUT2(p); &cr;&lf;#endif&cr;&lf;&cr;&lf;// Parameters&cr;&lf;float fScalarOpS3D_5_Default : fScalarOpS3D_5_DEFAULT;&cr;&lf;float fScalarOpS3D_5_reverseOrder : fScalarOpS3D_5_REVERSEORDER;&cr;&lf;&cr;&lf;// Input function placeholder&cr;&lf;#ifndef fScalarOpS3D_5_INPUT1&cr;&lf;#define fScalarOpS3D_5_INPUT1 length&cr;&lf;#endif&cr;&lf;&cr;&lf;// Input 2 Defualt option&cr;&lf;#ifndef fScalarOpS3D_5_INPUT2&cr;&lf;float fScalarOpS3D_5_singleValue (float3 p)&cr;&lf;{&cr;&lf;&tab;return fScalarOpS3D_5_Default; // if a second input class is not provided defualt to semantic&cr;&lf;}&cr;&lf;#define fScalarOpS3D_5_INPUT2 fScalarOpS3D_5_singleValue&cr;&lf;#endif&cr;&lf;&cr;&lf;float fScalarOpS3D_5_ (float3 p)&cr;&lf;{&cr;&lf;&tab;return fScalarOpS3D_5_OP; &cr;&lf;}&cr;&lf;// end of the function body&cr;&lf;#endif &cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;#ifndef SF3D&cr;&lf;#define SF3D fScalarOpS3D_5_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;#define AO&cr;&lf;//#define SHADOW&cr;&lf;//#define SSS&cr;&lf;&cr;&lf;&cr;&lf;#ifndef SF3D&cr;&lf;#define SF3D length // Just a place holder&cr;&lf;#endif&cr;&lf;&cr;&lf;#define RAYMARCHER&cr;&lf;&cr;&lf;#ifndef RAYMARCH_FXH&cr;&lf;#include&lt;packs\happy.fxh\raymarch.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef WRITEDEPTH&cr;&lf;#define WRITEDEPTH 1&cr;&lf;#endif&cr;&lf;&cr;&lf;&cr;&lf;cbuffer cbControls:register(b0)&cr;&lf;{&cr;&lf;&tab;float4x4 tVP:VIEWPROJECTION;&cr;&lf;&tab;float4x4 tV:VIEW;&cr;&lf;};&cr;&lf;&cr;&lf;&cr;&lf;Texture2D matCapTex &lt;string uiname=&quot;MatCap Texture&quot;;&gt; ;&cr;&lf;float alpha = 1.0;&cr;&lf;SamplerState sMatCap &lt;bool visible=false;&gt;&cr;&lf;{&cr;&lf;&tab;Filter=MIN_MAG_MIP_LINEAR;&cr;&lf;&tab;AddressU=CLAMP;&cr;&lf;&tab;AddressV=CLAMP;&cr;&lf;};&cr;&lf;////////////////////////////////////////////////////////////////&cr;&lf;float4 matCap(float3 vn)&cr;&lf;{&cr;&lf;&tab;vn.y = -vn.y;&cr;&lf;&tab;return float4(matCapTex.Sample(sMatCap, vn.xy *.5+.5));&cr;&lf;}&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////&cr;&lf;float4 matCapGrad(float3 vn, float3 gx, float3 gy)&cr;&lf;{&cr;&lf;&tab;vn.y = -vn.y;&cr;&lf;&tab;vn.xy = vn.xy * .5 + .5;&cr;&lf;&tab;return matCapTex.SampleGrad(sMatCap, vn.xy, gx.xy, gy.xy);&cr;&lf;}&cr;&lf;&cr;&lf;&cr;&lf;struct VS_IN{float4 PosO:POSITION;float4 TexCd:TEXCOORD0;};&cr;&lf;struct VS_OUT{float4 PosWVP:SV_POSITION;float4 TexCd:TEXCOORD0;};&cr;&lf;VS_OUT VS(VS_IN In){VS_OUT Out=(VS_OUT)0;Out.TexCd=In.TexCd;Out.PosWVP=float4(In.PosO.xy,0,1);return Out;}&cr;&lf;&cr;&lf;struct PS_OUT&cr;&lf;{&cr;&lf;&tab;float4 Color:SV_TARGET;&cr;&lf;&tab;#if WRITEDEPTH == 1&cr;&lf;&tab;float Depth:SV_DEPTH;&cr;&lf;&tab;#endif&cr;&lf;};&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;PS_OUT PS_MatCap(VS_OUT In)&cr;&lf;{&cr;&lf;&tab;// Raymarcher &cr;&lf;&tab;////////////////////////////////////////////////////////////////&cr;&lf;&tab;float2 uv = In.TexCd.xy; // Takes uv as input&cr;&lf;&tab;float3 rd, p, n;   &tab;float z; // Outputs surface posistion(p) &amp; normals(n), ray direction(rd) &amp; length(z) &cr;&lf;&tab;rayMarcher(uv, p, n, rd, z);&cr;&lf;&tab;////////////////////////////////////////////////////////////////&cr;&lf;&tab;&cr;&lf;&tab;float3 ppdx, ppdy;&cr;&lf;&tab;calcPPD(uv, z, rd, n, ppdx, ppdy);&cr;&lf;&tab;&cr;&lf;&tab;float4 c=1;&cr;&lf;&tab;float3 vn = mul(float4(n, 0), tV).xyz;&cr;&lf;&tab;c = matCap(vn);&cr;&lf;&tab;c = matCapGrad(vn, ppdx, ppdy);&cr;&lf;&tab;#ifdef AO&cr;&lf;&tab;float ao = calcAO(p,n);&cr;&lf;&tab;c.rgb *= ao;&cr;&lf;&tab;#endif&cr;&lf;&tab;&cr;&lf;&tab;#ifdef SHADOW&cr;&lf;&tab;float shadow = calcShadow(p);&cr;&lf;&tab;c.rgb *= shadow;&cr;&lf;&tab;#endif&cr;&lf;&tab;&cr;&lf;&tab;c.a = alpha;&cr;&lf;&tab;&cr;&lf;&tab;float4 PosWVP=mul(float4(p.xyz,1),tVP);&cr;&lf;&tab;PS_OUT Out;&cr;&lf;&tab;Out.Color=c;&cr;&lf;&tab;Out.Depth=PosWVP.z/PosWVP.w;&cr;&lf;&tab;return Out;&cr;&lf;}&cr;&lf;&cr;&lf;&cr;&lf;technique11 RayMarchMatCap&cr;&lf;{&cr;&lf;&tab;pass P0&cr;&lf;&tab;{&cr;&lf;&tab;&tab;SetVertexShader(CompileShader(vs_5_0,VS()));&cr;&lf;&tab;&tab;SetPixelShader(CompileShader(ps_5_0,PS_MatCap()));&cr;&lf;&tab;}&cr;&lf;}&cr;&lf;&cr;&lf;&cr;&lf;|">
   </PIN>
   <PIN pinname="ConfigDefines" slicecount="1" values="WRITEDEPTH=1">
   </PIN>
   <PIN pinname="Technique" slicecount="1" visible="1" values="RayMarchGradient">
   </PIN>
   <PIN pinname="Layer" visible="1">
   </PIN>
   <PIN pinname="Geometry" visible="1">
   </PIN>
   <PIN pinname="March Step Length" visible="1" slicecount="1" values="0.75">
   </PIN>
   <PIN pinname="March Min Distance" visible="1" slicecount="1" values="0.100000001490116">
   </PIN>
   <PIN pinname="March Max Distance" visible="1" slicecount="1" values="200">
   </PIN>
   <PIN pinname="March Max Iterations" visible="1" slicecount="1" values="120">
   </PIN>
   <PIN pinname="Enabled" visible="1">
   </PIN>
   <PIN pinname="Render State" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Defines" visible="1" pintype="Input" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Technique Valid" visible="1">
   </PIN>
   <PIN pinname="alpha" visible="1" slicecount="1" values="1">
   </PIN>
   <PIN pinname="AO Scale" visible="1" slicecount="1" values="0.5">
   </PIN>
   <PIN pinname="AO Bias" visible="1" slicecount="1" values="0.5">
   </PIN>
   <PIN pinname="MatCap Texture" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Compiled" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="7" srcpinname="Layer" dstnodeid="2" dstpinname="Layer In">
   </LINK>
   <LINK srcnodeid="3" srcpinname="Geometry Out" dstnodeid="7" dstpinname="Geometry">
   </LINK>
   <LINK srcnodeid="10" srcpinname="Output Enum" dstnodeid="7" dstpinname="Technique">
   </LINK>
   <LINK srcnodeid="11" srcpinname="Y Output Value" dstnodeid="7" dstpinname="March Step Length">
   </LINK>
   <LINK srcnodeid="12" srcpinname="Y Output Value" dstnodeid="7" dstpinname="March Min Distance">
   </LINK>
   <LINK srcnodeid="13" srcpinname="Y Output Value" dstnodeid="7" dstpinname="March Max Distance">
   </LINK>
   <LINK srcnodeid="14" srcpinname="Y Output Value" dstnodeid="7" dstpinname="March Max Iterations">
   </LINK>
   <LINK srcnodeid="15" srcpinname="Y Output Value" dstnodeid="7" dstpinname="Enabled">
   </LINK>
   <LINK srcnodeid="16" srcpinname="Output Node" dstnodeid="7" dstpinname="Render State">
   </LINK>
   <LINK srcnodeid="6" srcpinname="Output" dstnodeid="7" dstpinname="ShaderCode">
   </LINK>
   <LINK srcnodeid="30" srcpinname="Y Output Value" dstnodeid="7" dstpinname="AO Scale">
   </LINK>
   <LINK srcnodeid="31" srcpinname="Y Output Value" dstnodeid="7" dstpinname="AO Bias">
   </LINK>
   <LINK srcnodeid="32" srcpinname="Output Node" dstnodeid="7" dstpinname="MatCap Texture">
   </LINK>
   <LINK srcnodeid="35" srcpinname="Output" dstnodeid="7" dstpinname="Defines">
   </LINK>
   <LINK srcnodeid="7" srcpinname="Compiled" dstnodeid="21" dstpinname="Y Input Value">
   </LINK>
   <INFO author="" description="Raymarches 3D signed distance fields to color &amp; optionally depth.  Uses MatCap texture for shading" tags="">
   </INFO>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="38">
   <BOUNDS type="Box" left="7830" top="1740" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="7830" top="1740" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Alpha">
   </PIN>
   </NODE>
   <LINK srcnodeid="38" srcpinname="Y Output Value" dstnodeid="7" dstpinname="alpha">
   </LINK>
   <PACK Name="dx11.particles" Version="1.0.6">
   </PACK>
   </PATCH>