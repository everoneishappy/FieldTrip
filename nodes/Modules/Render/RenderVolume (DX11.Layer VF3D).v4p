<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv50beta35.7.dtd" >
   <PATCH nodename="C:\Users\Kyle\Desktop\Dropbox\VVVV Files\vvvv_50beta35.7_x64\packs\FieldTrip\nodes\modules\Render\RenderVolume (DX11.Layer VF3D).v4p" systemname="RenderVolume (DX11.Layer VF3D)" filename="C:\Users\Kyle\Desktop\Dropbox\VVVV Files\vvvv_50beta35_x64\packs\FieldTrip\Nodes\modules\Render\RenderVolume (DX11.Layer VF3D).v4p" scrollx="0" scrolly="0">
   <BOUNDS type="Window" left="14400" top="3150" width="12075" height="11295">
   </BOUNDS>
   <PACK Name="vvvv-Message" Version="2.9.0">
   </PACK>
   <PACK Name="vvvv-ZeroMQ" Version="0.5.3">
   </PACK>
   <PACK Name="VVVV.Packs" Version="0.2.0">
   </PACK>
   <PACK Name="addonpack" Version="35.0.0">
   </PACK>
   <NODE systemname="Semantics (DX11.Layer)" filename="%VVVV%\packs\dx11\nodes\plugins\VVVV.DX11.Nodes.dll" nodename="Semantics (DX11.Layer)" componentmode="Hidden" id="2">
   <BOUNDS type="Node" left="2055" top="4965" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Layer In" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Layer Out" visible="1">
   </PIN>
   <PIN pinname="Custom Semantics" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Resource Semantics" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Enabled" slicecount="1" values="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (String)" componentmode="InABox" id="5" systemname="IOBox (String)">
   <BOUNDS type="Box" left="675" top="945" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="675" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Default" slicecount="1" values="||">
   </PIN>
   <PIN pinname="File Mask" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Maximum Characters" slicecount="1" values="-1">
   </PIN>
   <PIN pinname="String Type" slicecount="1" values="MultiLine">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|VF3D Function|">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Add (String)" nodename="Add (String)" componentmode="Hidden" id="6">
   <BOUNDS type="Node" left="2625" top="3000" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Intersperse" slicecount="1" values="CarriageReturnLineFeed">
   </PIN>
   <PIN pinname="Input 1" visible="1">
   </PIN>
   <PIN pinname="Input 2" visible="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="5" srcpinname="Output String" dstnodeid="6" dstpinname="Input 1">
   </LINK>
   <NODE systemname="ShaderWatcher (DX11 Shader)" filename="%VVVV%\packs\FieldTrip\nodes\modules\Helpers\ShaderWatcher (DX11 Shader).v4p" nodename="ShaderWatcher (DX11 Shader)" componentmode="Hidden" id="9">
   <BOUNDS type="Node" left="3180" top="1830" width="100" height="100">
   </BOUNDS>
   <PIN pinname="File Path" visible="1" slicecount="1" values="..\Helpers\sdfTemplate.fx">
   </PIN>
   <PIN pinname="Shader Content" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="9" srcpinname="Shader Content" dstnodeid="6" dstpinname="Input 2">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="15" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="10365" top="945" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="10365" top="945" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="1">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Enabled">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="16" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="2460" top="3705" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="2460" top="3705" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Render State|">
   </PIN>
   <PIN pinname="Pin Visibility" slicecount="1" values="True">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="21" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="5835" top="6555" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="5835" top="6555" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Technique Valid|">
   </PIN>
   </NODE>
   <NODE id="25" nodename="IOBox (Node)" componentmode="InABox" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="705" top="1935" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="705" top="1935" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Function Parameter Semantics|">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <NODE id="24" nodename="IOBox (Node)" componentmode="InABox" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="1005" top="2430" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="1005" top="2430" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Node" slicecount="1" visible="1" values="||">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Function Resource Semantics|">
   </PIN>
   <PIN pinname="Output Node" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="25" srcpinname="Output Node" dstnodeid="2" dstpinname="Custom Semantics">
   </LINK>
   <LINK srcnodeid="24" srcpinname="Output Node" dstnodeid="2" dstpinname="Resource Semantics">
   </LINK>
   <NODE systemname="Self (VVVV)" nodename="Self (VVVV)" componentmode="Hidden" id="39">
   <BOUNDS type="Node" left="8430" top="5265" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Query Save" slicecount="1" visible="1" values="0">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="40" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="8430" top="4590" width="480" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="8430" top="4590" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="1" visible="1" values="0">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Boolean">
   </PIN>
   <PIN pinname="Behavior" slicecount="1" values="Toggle">
   </PIN>
   </NODE>
   <LINK srcnodeid="40" srcpinname="Y Output Value" dstnodeid="39" dstpinname="Query Save">
   </LINK>
   <NODE nodename="IOBox (Color)" componentmode="InABox" id="43" systemname="IOBox (Color)">
   <BOUNDS type="Box" left="5430" top="2760" width="2250" height="480">
   </BOUNDS>
   <BOUNDS type="Node" left="5430" top="2760" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Color Input" slicecount="1" visible="1" values="|0.00000,0.00000,0.00000,0.00000|">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Background Color|">
   </PIN>
   <PIN pinname="Color Output" visible="1">
   </PIN>
   </NODE>
   <NODE nodename="IOBox (Enumerations)" componentmode="InABox" id="47" systemname="IOBox (Enumerations)">
   <BOUNDS type="Box" left="4980" top="1890" width="1590" height="270">
   </BOUNDS>
   <BOUNDS type="Node" left="4980" top="1890" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Input Enum" slicecount="1" visible="1" values="R32G32B32A32_Float">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Target Format|">
   </PIN>
   <PIN pinname="Output Enum" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Shader (DX11.Effect String)" filename="%VVVV%\packs\FieldTrip\nodes\plugins\DX11.DynamicShader.dll" nodename="Shader (DX11.Effect String)" componentmode="Hidden" id="7">
   <BOUNDS type="Node" left="2040" top="4245" width="5040" height="270">
   </BOUNDS>
   <PIN pinname="ShaderCode" visible="1">
   </PIN>
   <PIN pinname="ConfigShader" slicecount="1" values="|////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;3D Noise Basis Functions&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fNoiseS3D_2_&quot;&cr;&lf;#ifndef fVecJoinVF3D_0_INPUT_X&cr;&lf;&cr;&lf;#ifndef NOISE_FXH&cr;&lf;#include &lt;packs\happy.fxh\noise.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef MAP_FXH&cr;&lf;#include &lt;packs\happy.fxh\map.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#define fNoiseS3D_2_NOISEBASIS perlin&cr;&lf;#define fNoiseS3D_2_INFLECTION 0&cr;&lf;#ifndef fNoiseS3D_2_NOISEBASIS&cr;&lf;#define fNoiseS3D_2_NOISEBASIS perlin&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_2_WORLEYOPTIONS&cr;&lf;#define fNoiseS3D_2_WORLEYOPTIONS&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_2_INFLECTION&cr;&lf;#define fNoiseS3D_2_INFLECTION 0&cr;&lf;#endif&cr;&lf;&cr;&lf;// paramaters&cr;&lf;float fNoiseS3D_2_freq : fNoiseS3D_2_FREQ = 2; &cr;&lf;float fNoiseS3D_2_amp : fNoiseS3D_2_AMP = .1; &cr;&lf;float fNoiseS3D_2_center : fNoiseS3D_2_CENTER; &cr;&lf;float fNoiseS3D_2_bias : fNoiseS3D_2_BIAS = 0.5;&cr;&lf;float3 fNoiseS3D_2_domainOffset : fNoiseS3D_2_DOMAINOFFSET;&cr;&lf;&tab;&cr;&lf;&cr;&lf;&cr;&lf;float fNoiseS3D_2_ (float3 p)&cr;&lf;{&cr;&lf;&tab;p = p * fNoiseS3D_2_freq + fNoiseS3D_2_domainOffset;&cr;&lf;&tab;float noise = fNoiseS3D_2_NOISEBASIS(p  fNoiseS3D_2_WORLEYOPTIONS);&cr;&lf;&tab;noise = sign(noise) * bias(abs(noise), fNoiseS3D_2_bias);&cr;&lf;&tab;#if fNoiseS3D_2_INFLECTION == 1&cr;&lf;&tab;// Billow&cr;&lf;&tab;noise = abs(noise);&cr;&lf;&tab;#elif fNoiseS3D_2_INFLECTION == 2&cr;&lf;&tab;//Ridge&cr;&lf;&tab;noise = 1 - abs(noise);&cr;&lf;&tab;#endif&cr;&lf;&tab;return noise * noise * fNoiseS3D_2_amp + fNoiseS3D_2_center;&cr;&lf;}&cr;&lf;&cr;&lf;&cr;&lf;#define fVecJoinVF3D_0_INPUT_X fNoiseS3D_2_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;3D Noise Basis Functions&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fNoiseS3D_1_&quot;&cr;&lf;#ifndef fVecJoinVF3D_0_INPUT_Y&cr;&lf;&cr;&lf;#ifndef NOISE_FXH&cr;&lf;#include &lt;packs\happy.fxh\noise.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef MAP_FXH&cr;&lf;#include &lt;packs\happy.fxh\map.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#define fNoiseS3D_1_NOISEBASIS perlin&cr;&lf;#define fNoiseS3D_1_INFLECTION 0&cr;&lf;#ifndef fNoiseS3D_1_NOISEBASIS&cr;&lf;#define fNoiseS3D_1_NOISEBASIS perlin&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_1_WORLEYOPTIONS&cr;&lf;#define fNoiseS3D_1_WORLEYOPTIONS&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_1_INFLECTION&cr;&lf;#define fNoiseS3D_1_INFLECTION 0&cr;&lf;#endif&cr;&lf;&cr;&lf;// paramaters&cr;&lf;float fNoiseS3D_1_freq : fNoiseS3D_1_FREQ = 2; &cr;&lf;float fNoiseS3D_1_amp : fNoiseS3D_1_AMP = .1; &cr;&lf;float fNoiseS3D_1_center : fNoiseS3D_1_CENTER; &cr;&lf;float fNoiseS3D_1_bias : fNoiseS3D_1_BIAS = 0.5;&cr;&lf;float3 fNoiseS3D_1_domainOffset : fNoiseS3D_1_DOMAINOFFSET;&cr;&lf;&tab;&cr;&lf;&cr;&lf;&cr;&lf;float fNoiseS3D_1_ (float3 p)&cr;&lf;{&cr;&lf;&tab;p = p * fNoiseS3D_1_freq + fNoiseS3D_1_domainOffset;&cr;&lf;&tab;float noise = fNoiseS3D_1_NOISEBASIS(p  fNoiseS3D_1_WORLEYOPTIONS);&cr;&lf;&tab;noise = sign(noise) * bias(abs(noise), fNoiseS3D_1_bias);&cr;&lf;&tab;#if fNoiseS3D_1_INFLECTION == 1&cr;&lf;&tab;// Billow&cr;&lf;&tab;noise = abs(noise);&cr;&lf;&tab;#elif fNoiseS3D_1_INFLECTION == 2&cr;&lf;&tab;//Ridge&cr;&lf;&tab;noise = 1 - abs(noise);&cr;&lf;&tab;#endif&cr;&lf;&tab;return noise * noise * fNoiseS3D_1_amp + fNoiseS3D_1_center;&cr;&lf;}&cr;&lf;&cr;&lf;&cr;&lf;#define fVecJoinVF3D_0_INPUT_Y fNoiseS3D_1_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;3D Noise Basis Functions&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fNoiseS3D_0_&quot;&cr;&lf;#ifndef fVecJoinVF3D_0_INPUT_Z&cr;&lf;&cr;&lf;#ifndef NOISE_FXH&cr;&lf;#include &lt;packs\happy.fxh\noise.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef MAP_FXH&cr;&lf;#include &lt;packs\happy.fxh\map.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#define fNoiseS3D_0_NOISEBASIS worley&cr;&lf;#define fNoiseS3D_0_INFLECTION 0&cr;&lf;#define fNoiseS3D_0_WORLEYOPTIONS , Manhattan, F2MinusF1&cr;&lf;#ifndef fNoiseS3D_0_NOISEBASIS&cr;&lf;#define fNoiseS3D_0_NOISEBASIS perlin&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_0_WORLEYOPTIONS&cr;&lf;#define fNoiseS3D_0_WORLEYOPTIONS&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fNoiseS3D_0_INFLECTION&cr;&lf;#define fNoiseS3D_0_INFLECTION 0&cr;&lf;#endif&cr;&lf;&cr;&lf;// paramaters&cr;&lf;float fNoiseS3D_0_freq : fNoiseS3D_0_FREQ = 2; &cr;&lf;float fNoiseS3D_0_amp : fNoiseS3D_0_AMP = .1; &cr;&lf;float fNoiseS3D_0_center : fNoiseS3D_0_CENTER; &cr;&lf;float fNoiseS3D_0_bias : fNoiseS3D_0_BIAS = 0.5;&cr;&lf;float3 fNoiseS3D_0_domainOffset : fNoiseS3D_0_DOMAINOFFSET;&cr;&lf;&tab;&cr;&lf;&cr;&lf;&cr;&lf;float fNoiseS3D_0_ (float3 p)&cr;&lf;{&cr;&lf;&tab;p = p * fNoiseS3D_0_freq + fNoiseS3D_0_domainOffset;&cr;&lf;&tab;float noise = fNoiseS3D_0_NOISEBASIS(p  fNoiseS3D_0_WORLEYOPTIONS);&cr;&lf;&tab;noise = sign(noise) * bias(abs(noise), fNoiseS3D_0_bias);&cr;&lf;&tab;#if fNoiseS3D_0_INFLECTION == 1&cr;&lf;&tab;// Billow&cr;&lf;&tab;noise = abs(noise);&cr;&lf;&tab;#elif fNoiseS3D_0_INFLECTION == 2&cr;&lf;&tab;//Ridge&cr;&lf;&tab;noise = 1 - abs(noise);&cr;&lf;&tab;#endif&cr;&lf;&tab;return noise * noise * fNoiseS3D_0_amp + fNoiseS3D_0_center;&cr;&lf;}&cr;&lf;&cr;&lf;&cr;&lf;#define fVecJoinVF3D_0_INPUT_Z fNoiseS3D_0_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;#ifndef CALC_FXH&cr;&lf;#include &lt;packs\happy.fxh\calc.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;//&cr;&lf;//&tab;&tab;3D Vector Field from three 3D Scaler Field Functions&cr;&lf;//&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;// This token will be replaced with function name via RegExpr: &quot;fVecJoinVF3D_0_&quot;&cr;&lf;#ifndef VF3D&cr;&lf;&cr;&lf;// Input Function placeholder&cr;&lf;#ifndef fVecJoinVF3D_0_INPUT_X&cr;&lf;#define fVecJoinVF3D_0_INPUT_X placeHolderS3&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fVecJoinVF3D_0_INPUT_Y&cr;&lf;#define fVecJoinVF3D_0_INPUT_Y placeHolderS3&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef fVecJoinVF3D_0_INPUT_Z&cr;&lf;#define fVecJoinVF3D_0_INPUT_Z placeHolderS3&cr;&lf;#endif&cr;&lf;&cr;&lf;float3 fVecJoinVF3D_0_ (float3 p)&cr;&lf;{&cr;&lf;&tab;return float3(fVecJoinVF3D_0_INPUT_X(p), fVecJoinVF3D_0_INPUT_Y(p), fVecJoinVF3D_0_INPUT_Z(p) );&cr;&lf;&tab;&cr;&lf;}&cr;&lf;&cr;&lf;#define VF3D fVecJoinVF3D_0_&cr;&lf;#endif&cr;&lf;////////////////////////////////////////////////////////////////////////////////////////////////&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;#ifndef CALC_FXH&cr;&lf;#include &lt;packs\happy.fxh\calc.fxh&gt;&cr;&lf;#endif&cr;&lf;&cr;&lf;#ifndef VF3D&cr;&lf;#define VF3D placeHolderV3 // Just a place holder&cr;&lf;#endif&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;RWTexture3D&lt;float4&gt; OUTPUT : BACKBUFFER;&lf;&lf;float4x4 InvTransform;&lf;float3 InvVolumeSize : INVTARGETSIZE;&cr;&lf;uint tranformCount, radCount, maxCount;&lf;//float3 VolumeSize : TARGETSIZE;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&lf;&lf;[numthreads(8, 8, 8)]&lf;void CS_Vol( uint3 ti : SV_DispatchThreadID)&lf;{ &lf;&tab;float3 p = ti;&lf;&tab;p *= InvVolumeSize;&lf;&tab;p -= 0.5f;&cr;&lf;&tab;float3 tp = mul(float4(p,1),InvTransform).xyz;&cr;&lf;&tab;OUTPUT[ti] = float4(VF3D(tp), 1.0);&lf;}&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;technique11 AsVolume&cr;&lf;{&lf;&tab;pass P0&lf;&tab;{&lf;&tab;&tab;SetComputeShader( CompileShader( cs_5_0, CS_Vol() ) );&lf;&tab;}&lf;}&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;&cr;&lf;|">
   </PIN>
   <PIN pinname="ConfigDefines" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Technique" slicecount="1" visible="1" values="AsVolume">
   </PIN>
   <PIN pinname="Layer" visible="1">
   </PIN>
   <PIN pinname="Geometry" visible="1">
   </PIN>
   <PIN pinname="March Step Length" visible="1">
   </PIN>
   <PIN pinname="March Min Distance" visible="1">
   </PIN>
   <PIN pinname="March Max Distance" visible="1">
   </PIN>
   <PIN pinname="March Max Iterations" visible="1">
   </PIN>
   <PIN pinname="Enabled" visible="1">
   </PIN>
   <PIN pinname="Render State" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Defines" visible="1" pintype="Input" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Technique Valid" visible="1">
   </PIN>
   <PIN pinname="softness" slicecount="1" visible="1" values="0.01">
   </PIN>
   <PIN pinname="xAspect" visible="1">
   </PIN>
   <PIN pinname="apsectRatioXY" visible="1" slicecount="2" values="0.673154354095459,0.5">
   </PIN>
   <PIN pinname="Color" slicecount="1" values="|0.84152,0.84152,0.84152,1.00000|">
   </PIN>
   <PIN pinname="drawCol" slicecount="1" values="|0.70146,0.96664,0.85429,1.00000|">
   </PIN>
   <PIN pinname="drawColXYZW" slicecount="4" visible="1" values="0,0,0,1">
   </PIN>
   </NODE>
   <LINK srcnodeid="7" srcpinname="Layer" dstnodeid="2" dstpinname="Layer In">
   </LINK>
   <LINK srcnodeid="15" srcpinname="Y Output Value" dstnodeid="7" dstpinname="Enabled">
   </LINK>
   <LINK srcnodeid="16" srcpinname="Output Node" dstnodeid="7" dstpinname="Render State">
   </LINK>
   <LINK srcnodeid="7" srcpinname="Technique Valid" dstnodeid="21" dstpinname="Y Input Value">
   </LINK>
   <LINK srcnodeid="6" srcpinname="Output" dstnodeid="7" dstpinname="ShaderCode">
   </LINK>
   <NODE systemname="Renderer (DX11 Volume)" filename="%VVVV%\packs\dx11\nodes\plugins\VVVV.DX11.Nodes.dll" nodename="Renderer (DX11 Volume)" componentmode="Hidden" id="49">
   <BOUNDS type="Node" left="2400" top="6150" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Target Format" visible="1">
   </PIN>
   <PIN pinname="Texture SizeXYZ" visible="1">
   </PIN>
   <PIN pinname="Layer" visible="1" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Buffers" visible="1">
   </PIN>
   <PIN pinname="Background Color" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="47" srcpinname="Output Enum" dstnodeid="49" dstpinname="Target Format">
   </LINK>
   <NODE nodename="IOBox (Value Advanced)" componentmode="InABox" id="50" systemname="IOBox (Value Advanced)">
   <BOUNDS type="Box" left="7410" top="1035" width="795" height="720">
   </BOUNDS>
   <BOUNDS type="Node" left="7410" top="1035" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Y Input Value" slicecount="3" visible="1" values="64,64,64">
   </PIN>
   <PIN pinname="Units" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Precision" slicecount="1" values="4">
   </PIN>
   <PIN pinname="Vector Size" slicecount="1" values="3">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="3">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="|Texture SizeXYZ|">
   </PIN>
   <PIN pinname="Value Type" slicecount="1" values="Integer">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="50" srcpinname="Y Output Value" dstnodeid="49" dstpinname="Texture SizeXYZ">
   </LINK>
   <NODE systemname="Dispatcher (DX11.Drawer)" filename="%VVVV%\packs\dx11\nodes\plugins\VVVV.DX11.Nodes.dll" nodename="Dispatcher (DX11.Drawer)" componentmode="Hidden" id="56">
   <BOUNDS type="Node" left="8205" top="3600" width="1020" height="270">
   </BOUNDS>
   <PIN pinname="Thread X" visible="1" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Thread Y" visible="1" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Thread Z" visible="1" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Geometry Out" visible="1">
   </PIN>
   </NODE>
   <NODE systemname="Divide (Value)" nodename="Divide (Value)" componentmode="Hidden" id="55">
   <BOUNDS type="Node" left="8295" top="2880" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Input 2" slicecount="1" values="8">
   </PIN>
   <PIN pinname="Input" visible="1" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Output" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="50" srcpinname="Y Output Value" dstnodeid="55" dstpinname="Input">
   </LINK>
   <NODE nodename="IOBox (Node)" componentmode="InABox" id="58" systemname="IOBox (Node)">
   <BOUNDS type="Box" left="2415" top="7635" width="795" height="240">
   </BOUNDS>
   <BOUNDS type="Node" left="2415" top="7635" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Descriptive Name" slicecount="1" values="Volume">
   </PIN>
   </NODE>
   <LINK srcnodeid="49" srcpinname="Buffers" dstnodeid="58" dstpinname="Input Node">
   </LINK>
   <LINK srcnodeid="43" srcpinname="Color Output" dstnodeid="49" dstpinname="Background Color">
   </LINK>
   <LINK srcnodeid="2" srcpinname="Layer Out" dstnodeid="49" dstpinname="Layer">
   </LINK>
   <NODE systemname="Vector (3d Split)" nodename="Vector (3d Split)" componentmode="Hidden" id="59">
   <BOUNDS type="Node" left="8220" top="3270" width="100" height="100">
   </BOUNDS>
   <PIN pinname="XYZ" visible="1">
   </PIN>
   <PIN pinname="X" visible="1">
   </PIN>
   <PIN pinname="Y" visible="1">
   </PIN>
   <PIN pinname="Z" visible="1">
   </PIN>
   </NODE>
   <LINK srcnodeid="55" srcpinname="Output" dstnodeid="59" dstpinname="XYZ">
   </LINK>
   <LINK srcnodeid="59" srcpinname="X" dstnodeid="56" dstpinname="Thread X">
   </LINK>
   <LINK srcnodeid="59" srcpinname="Y" dstnodeid="56" dstpinname="Thread Y">
   </LINK>
   <LINK srcnodeid="59" srcpinname="Z" dstnodeid="56" dstpinname="Thread Z">
   </LINK>
   <LINK srcnodeid="56" srcpinname="Geometry Out" dstnodeid="7" dstpinname="Geometry">
   </LINK>
   <NODE systemname="RenderVolume_VF3D (DX11.Effect)" filename="%VVVV%\packs\FieldTrip\nodes\modules\Render\RenderVolume_VF3D.fx" nodename="RenderVolume_VF3D (DX11.Effect)" componentmode="Hidden" id="60">
   <BOUNDS type="Node" left="2025" top="1095" width="100" height="100">
   </BOUNDS>
   <PIN pinname="Shader Path" visible="1" pintype="Output">
   </PIN>
   </NODE>
   <LINK srcnodeid="60" srcpinname="Shader Path" dstnodeid="9" dstpinname="File Path">
   </LINK>
   <PACK Name="dx11" Version="1.0.2">
   </PACK>
   </PATCH>